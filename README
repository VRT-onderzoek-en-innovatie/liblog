This is very much inspired by liblogger (http://liblogger.sourceforge.net/).

It provides a set of Log() macro's that behave similar to printf():
LogTrace(fmt, ...)
LogDebug(fmt, ...)
LogInfo (fmt, ...)
LogWarn (fmt, ...)
LogError(fmt, ...)
LogFatal(fmt, ...)

A first filter is done at compile-time. Log() statements of a level lower than
LOG_LEVEL are removed and produce no code at all.

A second filter is done at run-time. The remaining Log() statements incure a
function call, which returns immediately if the level of the statement is lower
than the current_log_level (set via the LogSetLevel() call).

When DEBUG is defined (when compiling your program, not when compiling this
library), the location of the Log() statement will be prepended to the log
message in the form of "<level> from <file>:<lineno> (<function>)".


TODO
----
read and use http://www.akkadia.org/drepper/dsohowto.pdf
symbol versioning
